{"version":3,"file":"src_app_all-modules_settings_settings_module_ts.js","mappings":"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","sources":["./src/app/all-modules/settings/approval/approval.component.ts","./src/app/all-modules/settings/change-password/change-password.component.ts","./src/app/all-modules/settings/company-settings/company-settings.component.ts","./src/app/all-modules/settings/cron/cron.component.ts","./src/app/all-modules/settings/email-settings/email-settings.component.ts","./src/app/all-modules/settings/invoice-settings/invoice-settings.component.ts","./src/app/all-modules/settings/leave-type/leave-type.component.ts","./src/app/all-modules/settings/localization/localization.component.ts","./src/app/all-modules/settings/notifications/notifications.component.ts","./src/app/all-modules/settings/performance/performance.component.ts","./src/app/all-modules/settings/role/role.component.ts","./src/app/all-modules/settings/salary-settings/salary-settings.component.ts","./src/app/all-modules/settings/settings-routing.module.ts","./src/app/all-modules/settings/settings.component.ts","./src/app/all-modules/settings/settings.module.ts","./src/app/all-modules/settings/theme-settings/theme-settings.component.ts","./src/app/all-modules/settings/tokbox/tokbox.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-approval',\r\n  templateUrl: './approval.component.html',\r\n  styleUrls: ['./approval.component.css']\r\n})\r\nexport class ApprovalComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  \r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.css']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  public changePassword: FormGroup;\r\n  constructor(private formBuilder: FormBuilder,private toastr: ToastrService) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.changePassword = this.formBuilder.group({\r\n      oldPassword: ['', [Validators.required]],\r\n      newPassword: ['', [Validators.required]],\r\n      confirmPassword: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  submitChangePassword() {\r\n    if (this.changePassword.valid) {\r\n      \r\n      this.toastr.success(\"Password is changed\", 'Success')\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-company-settings\",\r\n  templateUrl: \"./company-settings.component.html\",\r\n  styleUrls: [\"./company-settings.component.css\"],\r\n})\r\nexport class CompanySettingsComponent implements OnInit {\r\n  public companySettings: FormGroup;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.companySettings = this.formBuilder.group({\r\n      companyName: [\"Delta Technoligies\", [Validators.required]],\r\n      contactPerson: [\"Mclaren\", [Validators.required]],\r\n      address: [\"Penning street\", [Validators.required]],\r\n      country: [\"USA\", [Validators.required]],\r\n      city: [\"Nyanose\", [Validators.required]],\r\n      state: [\"Alabama\", [Validators.required]],\r\n      postalCode: [\"845321\", [Validators.required]],\r\n      email: [\"mclaren@deltatechnoligies.com\", [Validators.required]],\r\n      phoneNumber: [\"071-654124\", [Validators.required]],\r\n      mobileNumber: [\"8547522541\", [Validators.required]],\r\n      fax: [\"012-456213\", [Validators.required]],\r\n      website: [\"www.deltatechnoligies.com\", [Validators.required]],\r\n    });\r\n  }\r\n\r\n  submitCompany() {\r\n    if (this.companySettings.valid) {\r\n      this.toastr.success(\"Company Settings is added\", \"Success\");\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-cron',\r\n  templateUrl: './cron.component.html',\r\n  styleUrls: ['./cron.component.css']\r\n})\r\nexport class CronComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-email-settings',\r\n  templateUrl: './email-settings.component.html',\r\n  styleUrls: ['./email-settings.component.css']\r\n})\r\nexport class EmailSettingsComponent implements OnInit {\r\n  public emailSettings: FormGroup;\r\n  constructor(private formBuilder: FormBuilder,private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.emailSettings = this.formBuilder.group({\r\n      phpMail: ['', [Validators.required]],\r\n      smtp: ['', [Validators.required]],\r\n      emailAddress: ['', [Validators.required]],\r\n      emailName: ['', [Validators.required]],\r\n      smtpHost: ['', [Validators.required]],\r\n      smtpUser: ['', [Validators.required]],\r\n      smtpPassword: ['', [Validators.required]],\r\n      smtpPort: ['', [Validators.required]],\r\n      smtpSecurity: ['', [Validators.required]],\r\n      smtpAuthentication: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  submitEmailSettings() {\r\n    if (this.emailSettings.valid) {\r\n      \r\n      this.toastr.success(\"Email settings is added\", 'Success')\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-invoice-settings\",\r\n  templateUrl: \"./invoice-settings.component.html\",\r\n  styleUrls: [\"./invoice-settings.component.css\"],\r\n})\r\nexport class InvoiceSettingsComponent implements OnInit {\r\n  public invoiceSettings: FormGroup;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.invoiceSettings = this.formBuilder.group({\r\n      invoicePrefix: [\"INV\", [Validators.required]],\r\n      invoiceLogo: [\"\"],\r\n    });\r\n  }\r\n\r\n  submitInvoiceSettings() {\r\n    if (this.invoiceSettings.valid) {\r\n      this.toastr.success(\"Invoice settings is added\", \"Success\");\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, ViewChild } from \"@angular/core\";\r\nimport { AllModulesService } from \"../../all-modules.service\";\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { Subject } from \"rxjs\";\r\nimport { DataTableDirective } from \"angular-datatables\";\r\n\r\ndeclare const $: any;\r\n@Component({\r\n  selector: \"app-leave-type\",\r\n  templateUrl: \"./leave-type.component.html\",\r\n  styleUrls: [\"./leave-type.component.css\"],\r\n})\r\nexport class LeaveTypeComponent implements OnInit, OnDestroy {\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  public dtElement: DataTableDirective;\r\n  public dtOptions: DataTables.Settings = {};\r\n  public dtTrigger: Subject<any> = new Subject();\r\n  public url: any = \"leaveType\";\r\n  public allLeaveType: any = [];\r\n  public addLeaveType: FormGroup;\r\n  public editLeaveType: FormGroup;\r\n  public editId: any;\r\n  public tempId: any;\r\n  constructor(\r\n    private allModuleService: AllModulesService,\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getLeaveType();\r\n    // for data table configuration\r\n    this.dtOptions = {\r\n      // ... skipped ...\r\n      pageLength: 10,\r\n      dom: \"lrtip\",\r\n    };\r\n\r\n    // Add Provident Form Validation And Getting Values\r\n\r\n    this.addLeaveType = this.formBuilder.group({\r\n      addLeaveType: [\"\", [Validators.required]],\r\n      addLeaveDays: [\"\", [Validators.required]],\r\n    });\r\n\r\n    // Edit Provident Form Validation And Getting Values\r\n\r\n    this.editLeaveType = this.formBuilder.group({\r\n      editLeave: [\"\", [Validators.required]],\r\n      editLeaveDays: [\"\", [Validators.required]],\r\n    });\r\n  }\r\n\r\n  getLeaveType() {\r\n    this.allModuleService.get(this.url).subscribe((data) => {\r\n      this.allLeaveType = data;\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n\r\n  // Add Provident Modal Api Call\r\n\r\n  addLeave() {\r\n    if (this.addLeaveType.valid) {\r\n      let obj = {\r\n        leaveType: this.addLeaveType.value.addLeaveType,\r\n        leaveDays: this.addLeaveType.value.addLeaveDays,\r\n      };\r\n      this.allModuleService.add(obj, this.url).subscribe((data) => {\r\n        this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n          dtInstance.destroy();\r\n        });\r\n      });\r\n      this.getLeaveType();\r\n      $(\"#add_leavetype\").modal(\"hide\");\r\n      this.addLeaveType.reset();\r\n      this.toastr.success(\"Leave type is added\", \"Success\");\r\n    }\r\n  }\r\n\r\n  // Edit Provident Modal Api Call\r\n\r\n  editLeave() {\r\n    let obj = {\r\n      leaveType: this.editLeaveType.value.editLeave,\r\n      leaveDays: this.editLeaveType.value.editLeaveDays,\r\n      id: this.editId,\r\n    };\r\n    this.allModuleService.update(obj, this.url).subscribe((data1) => {\r\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n        dtInstance.destroy();\r\n      });\r\n    });\r\n    this.getLeaveType();\r\n    $(\"#edit_leavetype\").modal(\"hide\");\r\n    this.toastr.success(\"Leave type is edited\", \"Success\");\r\n  }\r\n\r\n  edit(value) {\r\n    this.editId = value;\r\n    const index = this.allLeaveType.findIndex((item) => {\r\n      return item.id === value;\r\n    });\r\n    let toSetValues = this.allLeaveType[index];\r\n    this.editLeaveType.setValue({\r\n      editLeave: toSetValues.leaveType,\r\n      editLeaveDays: toSetValues.leaveDays,\r\n    });\r\n  }\r\n\r\n  // Delete Provident Modal Api Call\r\n\r\n  deleteLeave() {\r\n    this.allModuleService.delete(this.tempId, this.url).subscribe((data) => {\r\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n        dtInstance.destroy();\r\n      });\r\n      this.getLeaveType();\r\n      $(\"#delete_leavetype\").modal(\"hide\");\r\n      this.toastr.success(\"Leave type is deleted\", \"Success\");\r\n    });\r\n  }\r\n  // for unsubscribe datatable\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-localization\",\r\n  templateUrl: \"./localization.component.html\",\r\n  styleUrls: [\"./localization.component.css\"],\r\n})\r\nexport class LocalizationComponent implements OnInit {\r\n  public localisation: FormGroup;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.localisation = this.formBuilder.group({\r\n      defaultCountry: [\"USA\", [Validators.required]],\r\n      dateFormat: [\"15/05/2016\", [Validators.required]],\r\n      timeZone: [\"(UTC +5:30) Antarctica/Palmer\", [Validators.required]],\r\n      deafultLanguage: [\"English\", [Validators.required]],\r\n      currencyCode: [\"USD\", [Validators.required]],\r\n    });\r\n  }\r\n\r\n  submitLocalisation() {\r\n    if (this.localisation.valid) {\r\n      this.toastr.success(\"Localisation is added\", \"Success\");\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notifications',\r\n  templateUrl: './notifications.component.html',\r\n  styleUrls: ['./notifications.component.css']\r\n})\r\nexport class NotificationsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-performance',\r\n  templateUrl: './performance.component.html',\r\n  styleUrls: ['./performance.component.css']\r\n})\r\nexport class PerformanceComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { AllModulesService } from \"../../all-modules.service\";\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\ndeclare const $: any;\r\n@Component({\r\n  selector: \"app-role\",\r\n  templateUrl: \"./role.component.html\",\r\n  styleUrls: [\"./role.component.css\"],\r\n})\r\nexport class RoleComponent implements OnInit {\r\n  public url: any = \"roles\";\r\n  public allroles: any = [];\r\n  public addRoles: FormGroup;\r\n  public editRoles: FormGroup;\r\n  public editId: any;\r\n  public tempId: any;\r\n\r\n  constructor(\r\n    private allModuleService: AllModulesService,\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getRoles();\r\n\r\n    // Add Provident Form Validation And Getting Values\r\n\r\n    this.addRoles = this.formBuilder.group({\r\n      addRoleName: [\"\", [Validators.required]],\r\n    });\r\n\r\n    // Edit Provident Form Validation And Getting Values\r\n\r\n    this.editRoles = this.formBuilder.group({\r\n      editRoleName: [\"\", [Validators.required]],\r\n    });\r\n  }\r\n\r\n  getRoles() {\r\n    this.allModuleService.get(this.url).subscribe((data) => {\r\n      this.allroles = data;\r\n    });\r\n  }\r\n\r\n  // Add Provident Modal Api Call\r\n\r\n  addRolesSubmit() {\r\n    if (this.addRoles.valid) {\r\n      let obj = { roleName: this.addRoles.value.addRoleName };\r\n      this.allModuleService.add(obj, this.url).subscribe((data) => {});\r\n      this.getRoles();\r\n      $(\"#add_role\").modal(\"hide\");\r\n      this.addRoles.reset();\r\n      this.toastr.success(\"Roles is added\", \"Success\");\r\n    }\r\n  }\r\n\r\n  // Edit Provident Modal Api Call\r\n\r\n  editRolesSubmit() {\r\n    let obj = { roleName: this.editRoles.value.editRoleName, id: this.editId };\r\n    this.allModuleService.update(obj, this.url).subscribe((data1) => {});\r\n    this.getRoles();\r\n    $(\"#edit_role\").modal(\"hide\");\r\n    this.toastr.success(\"Roles is edited\", \"Success\");\r\n  }\r\n\r\n  edit(value) {\r\n    this.editId = value;\r\n    const index = this.allroles.findIndex((item) => {\r\n      return item.id === value;\r\n    });\r\n    let toSetValues = this.allroles[index];\r\n    this.editRoles.setValue({\r\n      editRoleName: toSetValues.roleName,\r\n    });\r\n  }\r\n\r\n  // Delete Provident Modal Api Call\r\n\r\n  deleteRoles() {\r\n    this.allModuleService.delete(this.tempId, this.url).subscribe((data) => {\r\n      this.getRoles();\r\n      $(\"#delete_role\").modal(\"hide\");\r\n      this.toastr.success(\"Roles is deleted\", \"Success\");\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-salary-settings',\r\n  templateUrl: './salary-settings.component.html',\r\n  styleUrls: ['./salary-settings.component.css']\r\n})\r\nexport class SalarySettingsComponent implements OnInit {\r\n\r\n  public salarySettings: FormGroup;\r\n  constructor(private formBuilder: FormBuilder,private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.salarySettings = this.formBuilder.group({\r\n      da: ['', [Validators.required]],\r\n      hra: ['', [Validators.required]],\r\n      employeeShare: ['', [Validators.required]],\r\n      organisationShare: ['', [Validators.required]],\r\n      esiEmployeeShare: ['', [Validators.required]],\r\n      esiOrganisationShare: ['', [Validators.required]],\r\n      annualSalaryFrom1: ['', [Validators.required]],\r\n      annualSalaryTo1: ['', [Validators.required]],\r\n      annualpercentage1: ['', [Validators.required]],\r\n      annualSalaryFrom2: ['', [Validators.required]],\r\n      annualSalaryTo2: ['', [Validators.required]],\r\n      annualpercentage2: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  submitSalarySettings() {\r\n    if (this.salarySettings.valid) {\r\n      \r\n      this.toastr.success(\"Salary settings is added\", 'Success')\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SettingsComponent } from './settings.component';\r\nimport { CompanySettingsComponent } from './company-settings/company-settings.component';\r\nimport { LocalizationComponent } from './localization/localization.component';\r\nimport { ThemeSettingsComponent } from './theme-settings/theme-settings.component';\r\nimport { RoleComponent } from './role/role.component';\r\nimport { EmailSettingsComponent } from './email-settings/email-settings.component';\r\nimport { InvoiceSettingsComponent } from './invoice-settings/invoice-settings.component';\r\nimport { SalarySettingsComponent } from './salary-settings/salary-settings.component';\r\nimport { NotificationsComponent } from './notifications/notifications.component';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { LeaveTypeComponent } from './leave-type/leave-type.component';\r\nimport { TokboxComponent } from './tokbox/tokbox.component';\r\nimport { CronComponent } from './cron/cron.component';\r\nimport { PerformanceComponent } from './performance/performance.component';\r\nimport { ApprovalComponent } from './approval/approval.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:\"\",\r\n    component:SettingsComponent,\r\n    children:[\r\n      {\r\n        path:\"company-settings\",\r\n        component:CompanySettingsComponent\r\n      },\r\n      {\r\n        path:\"localization\",\r\n        component:LocalizationComponent\r\n      },\r\n      {\r\n        path:\"theme-settings\",\r\n        component:ThemeSettingsComponent\r\n      },\r\n      \r\n      {\r\n        path:\"role\",\r\n        component:RoleComponent\r\n      },\r\n      {\r\n        path:\"email-settings\",\r\n        component:EmailSettingsComponent\r\n      },\r\n      {\r\n        path:\"invoice-settings\",\r\n        component:InvoiceSettingsComponent\r\n      },\r\n      {\r\n        path:\"salary-settings\",\r\n        component:SalarySettingsComponent\r\n      },\r\n      {\r\n        path:\"notifications\",\r\n        component:NotificationsComponent\r\n      },\r\n      {\r\n        path:\"change-password\",\r\n        component:ChangePasswordComponent\r\n      },\r\n      {\r\n        path:\"leave-type\",\r\n        component:LeaveTypeComponent\r\n      },\r\n      {\r\n        path:\"tokbox-settings\",\r\n        component:TokboxComponent\r\n      },\r\n      {\r\n        path:\"cron-settings\",\r\n        component:CronComponent\r\n      },\r\n      {\r\n        path:\"performance-settings\",\r\n        component:PerformanceComponent\r\n      },\r\n      {\r\n        path:\"approval-settings\",\r\n        component:ApprovalComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SettingsRoutingModule { }\r\n","import { Component, OnInit, HostListener, NgZone } from \"@angular/core\";\r\nimport { NavigationEnd, Event, Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-settings\",\r\n  templateUrl: \"./settings.component.html\",\r\n  styleUrls: [\"./settings.component.css\"],\r\n})\r\n@HostListener(\"window: resize\", [\"$event\"])\r\nexport class SettingsComponent implements OnInit {\r\n  public innerHeight: any;\r\n  public urlComplete = {\r\n    mainUrl: \"\",\r\n    subUrl: \"\",\r\n    childUrl: \"\",\r\n  };\r\n  getScreenHeight() {\r\n    this.innerHeight = window.innerHeight + \"px\";\r\n  }\r\n\r\n  constructor(private ngZone: NgZone, private router: Router) {\r\n    this.router.events.subscribe((event: Event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        const url = event.url.split(\"/\");\r\n        this.urlComplete.mainUrl = url[2];\r\n        this.urlComplete.subUrl = url[3];\r\n        this.urlComplete.childUrl = url[4];\r\n      }\r\n    });\r\n    window.onresize = (e) => {\r\n      this.ngZone.run(() => {\r\n        this.innerHeight = window.innerHeight + \"px\";\r\n      });\r\n    };\r\n    this.getScreenHeight();\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  onResize(event) {\r\n    this.innerHeight = event.target.innerHeight + \"px\";\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SettingsRoutingModule } from './settings-routing.module';\r\nimport { SettingsComponent } from './settings.component';\r\nimport { CompanySettingsComponent } from './company-settings/company-settings.component';\r\nimport { LocalizationComponent } from './localization/localization.component';\r\nimport { ThemeSettingsComponent } from './theme-settings/theme-settings.component';\r\nimport { RoleComponent } from './role/role.component';\r\nimport { EmailSettingsComponent } from './email-settings/email-settings.component';\r\nimport { InvoiceSettingsComponent } from './invoice-settings/invoice-settings.component';\r\nimport { SalarySettingsComponent } from './salary-settings/salary-settings.component';\r\nimport { NotificationsComponent } from './notifications/notifications.component';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { LeaveTypeComponent } from './leave-type/leave-type.component';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TokboxComponent } from './tokbox/tokbox.component';\r\nimport { CronComponent } from './cron/cron.component';\r\nimport { PerformanceComponent } from './performance/performance.component';\r\nimport { ApprovalComponent } from './approval/approval.component';\r\nimport { TooltipModule } from 'ngx-bootstrap';\r\n\r\n@NgModule({\r\n  declarations: [SettingsComponent, CompanySettingsComponent, LocalizationComponent, ThemeSettingsComponent, RoleComponent, EmailSettingsComponent, InvoiceSettingsComponent, SalarySettingsComponent, NotificationsComponent, ChangePasswordComponent, LeaveTypeComponent, TokboxComponent, CronComponent, PerformanceComponent, ApprovalComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SettingsRoutingModule,\r\n    DataTablesModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TooltipModule.forRoot()\r\n  ]\r\n})\r\nexport class SettingsModule { }\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-theme-settings\",\r\n  templateUrl: \"./theme-settings.component.html\",\r\n  styleUrls: [\"./theme-settings.component.css\"],\r\n})\r\nexport class ThemeSettingsComponent implements OnInit {\r\n  public themeSettings: FormGroup;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.themeSettings = this.formBuilder.group({\r\n      websiteName: [\"Dreamguy's Technologies\", [Validators.required]],\r\n      lightLogo: [\"\"],\r\n      favicon: [\"\"],\r\n    });\r\n  }\r\n  submitThemeSettings() {\r\n    if (this.themeSettings.valid) {\r\n      this.toastr.success(\"Theme settings is added\", \"Success\");\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tokbox',\r\n  templateUrl: './tokbox.component.html',\r\n  styleUrls: ['./tokbox.component.css']\r\n})\r\nexport class TokboxComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}