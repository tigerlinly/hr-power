{"version":3,"file":"src_app_login_login_module_ts.js","mappings":"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","sources":["./src/app/core/storage/web.storage.ts","./src/app/login/forgot/forgot.component.ts","./src/app/login/lockscreen/lockscreen.component.ts","./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login/login.component.ts","./src/app/login/otp/otp.component.ts","./src/app/login/register/register.component.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class WebStorage {\r\n  public Loginvalue = new BehaviorSubject<any>(0);\r\n  public Createaccountvalue = new BehaviorSubject<any>(0);\r\n  public Forgotpasswordvalue = new BehaviorSubject<any>(0);\r\n  constructor(private router: Router) {}\r\n\r\n  /**\r\n   * Create account Function call from Registerpage\r\n   * @param uservalue from user form value\r\n   */\r\n  public Createaccount(uservalue: any): void {\r\n    let Rawdata = localStorage.getItem('Loginusers');\r\n    let Pdata: any = [];\r\n    Pdata = JSON.parse(Rawdata);\r\n    const Eresult: any = Pdata.find(({ email }) => email === uservalue.email);\r\n      if (Eresult) {\r\n\r\n        this.Createaccountvalue.next('This email are already exist');\r\n      } else {\r\n        Pdata.push(uservalue);\r\n        const jsonData = JSON.stringify(Pdata);\r\n        localStorage.setItem('Loginusers', jsonData);\r\n        this.Login(uservalue);\r\n      }\r\n  }\r\n\r\n  /**\r\n   * Login Functionality call from Login\r\n   * @param uservalue from login page\r\n   */\r\n  public Login(uservalue: any): void {\r\n    let returndata={message:'',status:''}\r\n    let data = localStorage.getItem('Loginusers');\r\n    let Pdata: [] = JSON.parse(data);\r\n    const Eresult: any = Pdata.find(({ email }) => email === uservalue.email);\r\n    if (Eresult) {\r\n      if (Eresult.password === uservalue.password) {\r\n        this.Createtoken(uservalue);\r\n        this.Loginvalue.next('Login success');\r\n        this.router.navigate(['/layout/dashboard/admin']);\r\n        this.Loginvalue.next(0);\r\n      } else {\r\n        returndata.message='Incorrect password'\r\n        returndata.status='password'\r\n        this.Loginvalue.next(returndata);\r\n      }\r\n    } else {\r\n      returndata.message='Email is  not valid'\r\n      returndata.status='email'\r\n      this.Loginvalue.next(returndata);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create Token function for authendication\r\n   * @param uservalue recived from login function\r\n   */\r\n  public Createtoken(uservalue) {\r\n    var result = 'ABCDEFGHI' + uservalue.email + 'ghijklmnopqrs' + 'z01234567';\r\n    localStorage.setItem('LoginData', result);\r\n  }\r\n\r\n  /**\r\n   * Two Storage are used\r\n   */\r\n  public Deleteuser() {\r\n    localStorage.removeItem('Loginusers');\r\n    localStorage.removeItem('LoginData');\r\n  }\r\n\r\n  /**\r\n   * called from Login page init statement\r\n   */\r\n  public Checkuser(): void {\r\n    let users = localStorage.getItem('Loginusers');\r\n    if (users === null) {\r\n      let password = [\r\n        {\r\n          email: 'admin@dreamguys.in',\r\n          password: '123456',\r\n        },\r\n      ];\r\n      const jsonData = JSON.stringify(password);\r\n      localStorage.setItem('Loginusers', jsonData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Forgot password function\r\n   * @param uservalue email object recived from Forgot password\r\n   */\r\n  public Forgotpassword(uservalue): void {\r\n    let Rawdata = localStorage.getItem('Loginusers');\r\n    let Pdata: any = [];\r\n    Pdata = JSON.parse(Rawdata);\r\n    const Eresult = Pdata.find(({ email }) => email === uservalue.email);\r\n    if (Eresult) {\r\n      this.Forgotpasswordvalue.next(Eresult);\r\n    } else {\r\n      this.Forgotpasswordvalue.next('Email Not Valid');\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { WebStorage } from \"src/app/core/storage/web.storage\";\r\n\r\n@Component({\r\n  selector: 'app-forgot',\r\n  templateUrl: './forgot.component.html',\r\n  styleUrls: ['./forgot.component.css']\r\n})\r\nexport class ForgotComponent implements OnInit {\r\n  form = new FormGroup({\r\n    email: new FormControl(\"\", [Validators.required, Validators.email]),\r\n  });\r\n  public CustomControler: any;\r\n  public subscription: Subscription;\r\n\r\n  constructor(private storage: WebStorage) { }\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n  ngOnInit() {}\r\n  submit() {\r\n    this.CustomControler = 0;\r\n    this.storage.Forgotpassword(this.form.value);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-lockscreen',\r\n  templateUrl: './lockscreen.component.html',\r\n  styleUrls: ['./lockscreen.component.css']\r\n})\r\nexport class LockscreenComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ForgotComponent } from './forgot/forgot.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { OtpComponent } from './otp/otp.component';\r\nimport { LockscreenComponent } from './lockscreen/lockscreen.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    { path: '' , component: LoginComponent },\r\n    {path:'forgot', component:ForgotComponent},\r\n    {path:'register',component:RegisterComponent},\r\n    {path:'otp',component:OtpComponent},\r\n    {path:'lockscreen',component:LockscreenComponent},\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { ForgotComponent } from './forgot/forgot.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { OtpComponent } from './otp/otp.component';\r\nimport { LockscreenComponent } from './lockscreen/lockscreen.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, ForgotComponent, RegisterComponent, OtpComponent, LockscreenComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { WebStorage } from \"src/app/core/storage/web.storage\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public CustomControler;\r\n  public subscription: Subscription;\r\n  public Toggledata=true;\r\n  form = new FormGroup({\r\n    email: new FormControl(\"admin@dreamguys.in\", [Validators.required]),\r\n    password: new FormControl('123456', [Validators.required]),\r\n  });\r\n\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  constructor(private storage: WebStorage) {\r\n    this.subscription = this.storage.Loginvalue.subscribe((data) => { \r\n      if(data != 0){\r\n        this.CustomControler = data;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.storage.Checkuser();\r\n  }\r\n\r\n  submit() {\r\n    this.storage.Login(this.form.value);\r\n  }\r\n  \r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  iconLogle(){\r\n    this.Toggledata = !this.Toggledata\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-otp',\r\n  templateUrl: './otp.component.html',\r\n  styleUrls: ['./otp.component.css']\r\n})\r\nexport class OtpComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { WebStorage } from \"src/app/core/storage/web.storage\";\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  public isvalidconfirmpassword: boolean = false;\r\n  public subscription: Subscription;\r\n  public CustomControler: any;\r\n\r\n  form = new FormGroup({\r\n    email: new FormControl(\"\", [Validators.required, Validators.email]),\r\n    password: new FormControl(\"\", [Validators.required]),\r\n    confirmPassword: new FormControl(\"\", [Validators.required]),\r\n  });\r\n\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  constructor(private storage: WebStorage) {\r\n    this.subscription = this.storage.Createaccountvalue.subscribe((data) => {\r\n      this.CustomControler = data;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  submit() {\r\n    if (this.form.value.password != this.form.value.confirmPassword) {\r\n      this.isvalidconfirmpassword = true;\r\n    } else {\r\n      this.isvalidconfirmpassword = false;\r\n      this.storage.Createaccount(this.form.value);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}