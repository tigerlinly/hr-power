{"version":3,"file":"src_app_all-modules_knowledgebase_knowledgebase_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAkD;AACY;IAQjD,0BAA0B,SAA1B,0BAA0B;IAGrC,YAAoB,gBAAmC;QAAnC,qBAAgB,GAAhB,gBAAgB,CAAmB;QAFhD,QAAG,GAAQ,eAAe,CAAC;QAC3B,qBAAgB,GAAQ,EAAE,CAAC;IACwB,CAAC;IAE3D,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACrD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YAtBQ,mEAAiB;;AAQb,0BAA0B;IALtC,wDAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,oFAAkD;;KAEnD,CAAC;GACW,0BAA0B,CActC;AAdsC;;;;;;;;;;;;;;;;;;;;;;ACTE;AACc;AACY;AAC4B;AACA;AAC/F,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAC,EAAE;QACP,SAAS,EAAC,4EAAsB;QAChC,QAAQ,EAAC;YACP;gBACE,IAAI,EAAC,oBAAoB;gBACzB,SAAS,EAAC,wGAA0B;aACrC;YACD;gBACE,IAAI,EAAC,oBAAoB;gBACzB,SAAS,EAAC,wGAA0B;aACrC;SACF;KACF;CACF,CAAC;IAMW,0BAA0B,SAA1B,0BAA0B;CAAI;AAA9B,0BAA0B;IAJtC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,0BAA0B,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;AC1BW;IAOrC,0BAA0B,SAA1B,0BAA0B;IAErC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;;AAPY,0BAA0B;IALtC,wDAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,oFAAkD;;KAEnD,CAAC;GACW,0BAA0B,CAOtC;AAPsC;;;;;;;;;;;;;;;;;;;;;;ACPgC;IAQ1D,sBAAsB,SAAtB,sBAAsB;IAOjC,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAChC,MAAM,CAAC,QAAQ,GAAG,CAAC,CAAC,EAAE,EAAE;YACtB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE;gBACnB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;YAC/C,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QACF,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAXD,eAAe;QACb,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;IAC/C,CAAC;IAWD,QAAQ;IACR,CAAC;IAED,QAAQ,CAAC,KAAK;QACZ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;IACrD,CAAC;CAEF;;YA/BwC,iDAAM;;AAQlC,sBAAsB;IANlC,wDAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,+EAA6C;;KAE9C,CAAC;IACD,2DAAY,CAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAC;GAC9B,sBAAsB,CAuBlC;AAvBkC;;;;;;;;;;;;;;;;;;;;;;;ACRM;AACM;AAE6B;AACT;AAC4B;AACA;IASlF,mBAAmB,SAAnB,mBAAmB;CAAI;AAAvB,mBAAmB;IAP/B,uDAAQ,CAAC;QACR,YAAY,EAAE,CAAC,4EAAsB,EAAE,wGAA0B,EAAE,wGAA0B,CAAC;QAC9F,OAAO,EAAE;YACP,yDAAY;YACZ,qFAA0B;SAC3B;KACF,CAAC;GACW,mBAAmB,CAAI;AAAJ","sources":["./src/app/all-modules/knowledgebase/knowledgebase-main/knowledgebase-main.component.ts","./src/app/all-modules/knowledgebase/knowledgebase-routing.module.ts","./src/app/all-modules/knowledgebase/knowledgebase-view/knowledgebase-view.component.ts","./src/app/all-modules/knowledgebase/knowledgebase.component.ts","./src/app/all-modules/knowledgebase/knowledgebase.module.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { AllModulesService } from \"../../all-modules.service\";\r\n\r\ndeclare const $: any;\r\n@Component({\r\n  selector: \"app-knowledgebase-main\",\r\n  templateUrl: \"./knowledgebase-main.component.html\",\r\n  styleUrls: [\"./knowledgebase-main.component.css\"],\r\n})\r\nexport class KnowledgebaseMainComponent implements OnInit {\r\n  public url: any = \"knowledgeBase\";\r\n  public allKnowledgeBase: any = [];\r\n  constructor(private allModuleService: AllModulesService) {}\r\n\r\n  ngOnInit() {\r\n    this.getPolicies();\r\n  }\r\n\r\n  getPolicies() {\r\n    this.allModuleService.get(this.url).subscribe((data) => {\r\n      this.allKnowledgeBase = data;\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { KnowledgebaseComponent } from './knowledgebase.component';\r\nimport { KnowledgebaseMainComponent } from './knowledgebase-main/knowledgebase-main.component';\r\nimport { KnowledgebaseViewComponent } from './knowledgebase-view/knowledgebase-view.component';\r\nconst routes: Routes = [\r\n  {\r\n    path:\"\",\r\n    component:KnowledgebaseComponent,\r\n    children:[\r\n      {\r\n        path:\"knowledgebase-main\",\r\n        component:KnowledgebaseMainComponent\r\n      },\r\n      {\r\n        path:\"knowledgebase-view\",\r\n        component:KnowledgebaseViewComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class KnowledgebaseRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-knowledgebase-view',\r\n  templateUrl: './knowledgebase-view.component.html',\r\n  styleUrls: ['./knowledgebase-view.component.css']\r\n})\r\nexport class KnowledgebaseViewComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit,HostListener, NgZone } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-knowledgebase',\r\n  templateUrl: './knowledgebase.component.html',\r\n  styleUrls: ['./knowledgebase.component.css']\r\n})\r\n@HostListener('window: resize', ['$event'])\r\nexport class KnowledgebaseComponent implements OnInit {\r\n\r\n  public innerHeight: any;\r\n  getScreenHeight() {\r\n    this.innerHeight = window.innerHeight + 'px';\r\n  }\r\n\r\n  constructor(private ngZone: NgZone) {\r\n    window.onresize = (e) => {\r\n      this.ngZone.run(() => {\r\n        this.innerHeight = window.innerHeight + 'px';\r\n      });\r\n    };\r\n    this.getScreenHeight();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onResize(event) {\r\n    this.innerHeight = event.target.innerHeight + 'px';\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { KnowledgebaseRoutingModule } from './knowledgebase-routing.module';\r\nimport { KnowledgebaseComponent } from './knowledgebase.component';\r\nimport { KnowledgebaseMainComponent } from './knowledgebase-main/knowledgebase-main.component';\r\nimport { KnowledgebaseViewComponent } from './knowledgebase-view/knowledgebase-view.component';\r\n\r\n@NgModule({\r\n  declarations: [KnowledgebaseComponent, KnowledgebaseMainComponent, KnowledgebaseViewComponent],\r\n  imports: [\r\n    CommonModule,\r\n    KnowledgebaseRoutingModule\r\n  ]\r\n})\r\nexport class KnowledgebaseModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}